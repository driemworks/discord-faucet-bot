import { GenerateParams as BaseGenerateParams, SlotScheduler } from './base.slot-scheduler';
interface DistanceInput {
    distance: number;
}
type GenerateParams = BaseGenerateParams<DistanceInput>;
/**
 * DistanceBasedSlotScheduler
 *
 * Select slots randomly between the latest known slot and a future slot.
 */
export declare class DistanceBasedSlotScheduler extends SlotScheduler<DistanceInput> {
    /**
     * generateSchedule
     *
     * Generates a schedule of `slotAmount` random slots in a range from
     * the current slot + 1, and current slot + distance.
     *
     * @param {number} params.slotAmount - The number of slots to generate.
     * @param {number} params.currentSlot - The current slot number.
     * @param {number} params.distance - The distance (range) to sample slots from.
     * @returns {SlotSchedule}
     */
    generateSchedule(params: GenerateParams): number[];
    /**
     * _generateDistinctRandomIntegers
     *
     * Generates a prescribed amount of random integers in a
     * specified range (from 1 to `range`).
     *
     * @param {number} range - The range to generate random integers from.
     * @param {number} amount - Total amount of random integers to generate.
     * @returns {number[]} - The generated integers.
     */
    private _pickDistinctIntegers;
}
export {};
