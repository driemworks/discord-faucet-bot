// __mocks__/@ideallabs/etf-sdk.ts
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
// Mocked implementation of init
export default function init() {
    return __awaiter(this, void 0, void 0, function* () {
        // Mock initialization logic
    });
}
// Mocked implementation of EtfApiWrapper
export class EtfApiWrapper {
    constructor(pp1, pp2) {
        // Mock constructor logic
    }
    version() {
        return [1, 2, 3]; // Mock version
    }
    encrypt(message_bytes, slot_id_bytes, t) {
        return {
            aes_ct: 'mocked-aes-ct',
            etf_ct: 'mocked-etf-ct',
        };
    }
    decrypt(ciphertext_bytes, nonce_bytes, capsule_bytes, sks_bytes) {
        return {
            decrypted: 'mocked-decrypted',
        };
    }
}
